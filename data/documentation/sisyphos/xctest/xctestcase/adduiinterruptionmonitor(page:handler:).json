{"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"modules":[{"name":"Sisyphos","relatedModules":["XCTest"]}],"roleHeading":"Instance Method","externalID":"s:So10XCTestCaseC8SisyphosE24addUIInterruptionMonitor4page7handlerAC012InterruptionF0Vx_yxctAC4PageRzlF","extendedModule":"XCTest","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"addUIInterruptionMonitor"},{"kind":"text","text":"<"},{"text":"P","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"page","kind":"externalParam"},{"kind":"text","text":": "},{"text":"P","preciseIdentifier":"s:So10XCTestCaseC8SisyphosE24addUIInterruptionMonitor4page7handlerAC012InterruptionF0Vx_yxctAC4PageRzlF1PL_xmfp","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"handler","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"P","kind":"typeIdentifier","preciseIdentifier":"s:So10XCTestCaseC8SisyphosE24addUIInterruptionMonitor4page7handlerAC012InterruptionF0Vx_yxctAC4PageRzlF1PL_xmfp"},{"text":") -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:8Sisyphos19InterruptionMonitorV","text":"InterruptionMonitor"}],"symbolKind":"method","title":"addUIInterruptionMonitor(page:handler:)"},"hierarchy":{"paths":[["doc:\/\/sisyphos.Sisyphos\/documentation\/Sisyphos","doc:\/\/sisyphos.Sisyphos\/documentation\/Sisyphos\/XCTest","doc:\/\/sisyphos.Sisyphos\/documentation\/Sisyphos\/XCTest\/XCTestCase"]]},"identifier":{"url":"doc:\/\/sisyphos.Sisyphos\/documentation\/Sisyphos\/XCTest\/XCTestCase\/addUIInterruptionMonitor(page:handler:)","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"type":"text","text":"Adds a new UI interruption monitor."}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/sisyphos\/xctest\/xctestcase\/adduiinterruptionmonitor(page:handler:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"text":"@discardableResult","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addUIInterruptionMonitor","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":">("},{"kind":"externalParam","text":"page"},{"kind":"text","text":": "},{"preciseIdentifier":"s:So10XCTestCaseC8SisyphosE24addUIInterruptionMonitor4page7handlerAC012InterruptionF0Vx_yxctAC4PageRzlF1PL_xmfp","text":"P","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"handler","kind":"externalParam"},{"kind":"text","text":": "},{"text":"@escaping","kind":"attribute"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"P","preciseIdentifier":"s:So10XCTestCaseC8SisyphosE24addUIInterruptionMonitor4page7handlerAC012InterruptionF0Vx_yxctAC4PageRzlF1PL_xmfp"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:8Sisyphos19InterruptionMonitorV","text":"InterruptionMonitor","identifier":"doc:\/\/sisyphos.Sisyphos\/documentation\/Sisyphos\/InterruptionMonitor","kind":"typeIdentifier"},{"kind":"text","text":" "},{"text":"where","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/sisyphos.Sisyphos\/documentation\/Sisyphos\/Page","text":"Page","kind":"typeIdentifier","preciseIdentifier":"s:8Sisyphos4PageP"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"page","content":[{"inlineContent":[{"type":"text","text":"A page which describes the UI interruption. Whenever the page exists, Sisyphos will consider it a UI"},{"text":" ","type":"text"},{"text":"interruption which needs to be removed and will call your provided handler.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"A handler which is called when the page currently interrupts the user interface. It gets passed an"},{"type":"text","text":" "},{"text":"instance of the page, so you can interact with its elements to dismiss the interruption.","type":"text"}],"type":"paragraph"}],"name":"handler"}]},{"kind":"content","content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"inlineContent":[{"type":"text","text":"The created interruption monitor. You can use this created interruption monitor if you want to remove"},{"type":"text","text":" "},{"type":"text","text":"it from further evaluation later in the test case by calling "},{"code":"removeUIInterruptionMonitor(:)","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use XCTestCase UI interruption monitors to handle situations in which unrelated UI elements might appear and"},{"text":" ","type":"text"},{"text":"block the test’s interaction with elements in the workflow under test. The following situations could result in","type":"text"},{"text":" ","type":"text"},{"text":"a blocked test:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Your app presents a modal view that takes focus away from the UI under test, as can happen, for example,"},{"type":"text","text":" "},{"text":"when a background task fails and you notify the user of the failure.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Your app performs an action that causes the operating system to present a modal UI. An example is an action"},{"type":"text","text":" "},{"type":"text","text":"that presents a photo picker, which may make the system request access to photos if the user hasn’t already"},{"type":"text","text":" "},{"type":"text","text":"granted it."}]}]}]},{"inlineContent":[{"type":"text","text":"It will add the interruption monitor only to this test case. It will be active for this test case only and will"},{"type":"text","text":" "},{"text":"not influence other test cases.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Added UI interruption monitors are evaluated in the reversed order in which they were added, meaning that the"},{"text":" ","type":"text"},{"type":"text","text":"UI interruption monitor which has been added the latest will be evaluated first."}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Unlike XCTest’s UI interruption monitor system, Sisyphos will not call all handlers for any UI"},{"type":"text","text":" "},{"type":"text","text":"interruption until the first handler returns true. Instead, you can describe how the expected UI interruption"},{"text":" ","type":"text"},{"type":"text","text":"looks like – which is not possible in XCTest. Sisysphos then will call only the handlers of those UI"},{"type":"text","text":" "},{"text":"interruption monitors which are actually blocking the user interaction.","type":"text"}]}],"type":"aside","name":"Note","style":"note"}]}],"references":{"doc://sisyphos.Sisyphos/documentation/Sisyphos/XCTest/XCTestCase/addUIInterruptionMonitor(page:handler:)":{"title":"addUIInterruptionMonitor(page:handler:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addUIInterruptionMonitor","kind":"identifier"},{"kind":"text","text":"<"},{"text":"P","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"page","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"P","preciseIdentifier":"s:So10XCTestCaseC8SisyphosE24addUIInterruptionMonitor4page7handlerAC012InterruptionF0Vx_yxctAC4PageRzlF1PL_xmfp"},{"kind":"text","text":", "},{"kind":"externalParam","text":"handler"},{"kind":"text","text":": ("},{"text":"P","kind":"typeIdentifier","preciseIdentifier":"s:So10XCTestCaseC8SisyphosE24addUIInterruptionMonitor4page7handlerAC012InterruptionF0Vx_yxctAC4PageRzlF1PL_xmfp"},{"kind":"text","text":") -> "},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:8Sisyphos19InterruptionMonitorV","kind":"typeIdentifier","text":"InterruptionMonitor"}],"kind":"symbol","type":"topic","abstract":[{"text":"Adds a new UI interruption monitor.","type":"text"}],"url":"\/documentation\/sisyphos\/xctest\/xctestcase\/adduiinterruptionmonitor(page:handler:)","identifier":"doc:\/\/sisyphos.Sisyphos\/documentation\/Sisyphos\/XCTest\/XCTestCase\/addUIInterruptionMonitor(page:handler:)","role":"symbol"},"doc://sisyphos.Sisyphos/documentation/Sisyphos/XCTest/XCTestCase":{"identifier":"doc:\/\/sisyphos.Sisyphos\/documentation\/Sisyphos\/XCTest\/XCTestCase","url":"\/documentation\/sisyphos\/xctest\/xctestcase","kind":"symbol","role":"symbol","fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"c:objc(cs)XCTestCase","text":"XCTestCase","kind":"identifier"}],"title":"XCTestCase","abstract":[],"navigatorTitle":[{"text":"XCTestCase","kind":"identifier"}],"type":"topic"},"doc://sisyphos.Sisyphos/documentation/Sisyphos/InterruptionMonitor":{"role":"symbol","type":"topic","abstract":[{"text":"Describes a UI interruption that can happen at undefined times during testing and how to handle it so the tests are","type":"text"},{"type":"text","text":" "},{"text":"unblocked from interacting with the user interface.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"InterruptionMonitor","kind":"identifier"}],"title":"InterruptionMonitor","navigatorTitle":[{"text":"InterruptionMonitor","kind":"identifier"}],"identifier":"doc:\/\/sisyphos.Sisyphos\/documentation\/Sisyphos\/InterruptionMonitor","url":"\/documentation\/sisyphos\/interruptionmonitor"},"doc://sisyphos.Sisyphos/documentation/Sisyphos":{"title":"Sisyphos","url":"\/documentation\/sisyphos","kind":"symbol","role":"collection","identifier":"doc:\/\/sisyphos.Sisyphos\/documentation\/Sisyphos","abstract":[{"text":"Declarative end-to-end and UI testing for iOS and macOS","type":"text"}],"type":"topic"},"doc://sisyphos.Sisyphos/documentation/Sisyphos/XCTest":{"abstract":[],"role":"collection","identifier":"doc:\/\/sisyphos.Sisyphos\/documentation\/Sisyphos\/XCTest","kind":"symbol","title":"XCTest","type":"topic","url":"\/documentation\/sisyphos\/xctest"},"doc://sisyphos.Sisyphos/documentation/Sisyphos/Page":{"type":"topic","kind":"symbol","title":"Page","url":"\/documentation\/sisyphos\/page","navigatorTitle":[{"text":"Page","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/sisyphos.Sisyphos\/documentation\/Sisyphos\/Page","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Page","kind":"identifier"}],"abstract":[{"text":"A page describes a screen that is expected to appear in the tests. It’s the basic building block for writing tests","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"with Sisyphos."}]}}}