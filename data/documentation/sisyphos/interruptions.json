{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Registering-interruption-handlers","level":2,"type":"heading","text":"Registering interruption handlers"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Sisyphos has the philosophy that you always describe what to expect upfront."},{"type":"text","text":" "},{"type":"text","text":"You usually don’t react on things happening in your tested app. Instead, you describe what you expect that happens and"},{"type":"text","text":" "},{"type":"text","text":"Sisyphos is validating that the app does like expected."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"However, there are sometimes UI elements which will interrupt the user interface and you are not in control when or"},{"type":"text","text":" "},{"type":"text","text":"where these elements will appear."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For such situations, Sisyphos provides the possibility to register interruption handlers."},{"type":"text","text":" "},{"type":"text","text":"You can describe the interruption that appears with a page, similar to what you do in regular tests."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Let’s say we want to react on an alert that has the message "},{"type":"codeVoice","code":"There was an error"},{"type":"text","text":" and a button that says "},{"type":"codeVoice","code":"OK"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"We can describe the alert with the following page:"}]},{"type":"codeListing","syntax":"swift","code":["struct ErrorAlert: Page {","    let button: Button(label: \"OK\")","    var body: PageDescription {","        Alert {","            StaticText(\"There was an error\")","            button","        }","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Then, in the test, you register an interruption monitor that presses on the button whenever the alert is currently"},{"type":"text","text":" "},{"type":"text","text":"displayed and interrupting the user interface because of this."}]},{"type":"codeListing","syntax":"swift","code":["addInterruptionMonitor(page: ErrorAlert()) { page in","    page.button.tap()","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"See the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Sisyphos\/documentation\/Sisyphos\/XCTest\/XCTestCase\/addUIInterruptionMonitor(page:handler:)"},{"type":"text","text":" method for more details."}]},{"anchor":"Unregistering-interruption-handlers","level":2,"type":"heading","text":"Unregistering interruption handlers"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A Sisyphos interruption monitor only handles interruptions in the test case in which it was registered. It will not"},{"type":"text","text":" "},{"type":"text","text":"handle interruptions that are called in other test cases."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Yet, sometimes you want to have even more precise control and only handle interruptions that happen in selected parts of"},{"type":"text","text":" "},{"type":"text","text":"a test case."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To achieve this, you can unregister any interruption monitor that was previously registered via the"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Sisyphos\/documentation\/Sisyphos\/XCTest\/XCTestCase\/removeUIInterruptionMonitor(_:)"},{"type":"text","text":" method."}]},{"anchor":"Provided-Pages-for-iOS-Permission-interruptions","level":2,"type":"heading","text":"Provided Pages for iOS Permission interruptions"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Sisyphos comes with page implementations that enable you to write tests for permission flows on iOS."},{"type":"text","text":" "},{"type":"text","text":"You can use this pages to add interruption handlers that can handle permission dialogues."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/Sisyphos\/documentation\/Sisyphos\/DefaultPermissionAlert"},{"type":"text","text":" A page that can describe permission dialogues on iOS."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/Sisyphos\/documentation\/Sisyphos\/DefaultAlert"},{"type":"text","text":": A page that can describe certain iOS permission alerts such as App Tracking Transparency prompt."}]}]}]},{"anchor":"Removing-Default-Interruption-Handlers","level":2,"type":"heading","text":"Removing Default Interruption Handlers"},{"type":"paragraph","inlineContent":[{"type":"text","text":"By default, XCTest will handle interruptions such as permission dialogues automatically."},{"type":"text","text":" "},{"type":"text","text":"This is done with implicit interruption handlers that take care of the most common interruptions for you."},{"type":"text","text":" "},{"type":"text","text":"On iOS, XCTest handles interrupting elements if they have a cancel button or a default button."},{"type":"text","text":" "},{"type":"text","text":"Starting from Xcode 12, it also implicitly handles Banner notifications."},{"type":"text","text":" "},{"type":"text","text":"The details are explained in a "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2020\/10220\/?time=209"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you want to test permission flows, then this implicit handling will interfere with your tests,"},{"type":"text","text":" "},{"type":"text","text":"which ultimatively makes it impossible to write such tests."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Therefore, Sisyphos extends the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Sisyphos\/documentation\/Sisyphos\/XCTest\/XCTestCase"},{"type":"text","text":" class"},{"type":"text","text":" "},{"type":"text","text":"and provides the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Sisyphos\/documentation\/Sisyphos\/XCTest\/XCTestCase\/disableDefaultXCUIInterruptionHandlers()"},{"type":"text","text":" method."},{"type":"text","text":" "},{"type":"text","text":"Calling this method will disable the implicit handlers, so you can write tests that test permission flows."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/sisyphos\/interruptions"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Sisyphos\/documentation\/Sisyphos\/Interruptions","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Learn how to handle interruptions that can happen unexpectedly or at any time, such as alerts and permission dialogues."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Handling Interruptions","role":"article","modules":[{"name":"Sisyphos"}]},"hierarchy":{"paths":[["doc:\/\/Sisyphos\/documentation\/Sisyphos"]]},"seeAlsoSections":[{"title":"Essentials","identifiers":["doc:\/\/Sisyphos\/documentation\/Sisyphos\/Integration","doc:\/\/Sisyphos\/documentation\/Sisyphos\/WritingTests"],"generated":true}],"references":{"doc://Sisyphos/documentation/Sisyphos/DefaultAlert":{"role":"symbol","title":"DefaultAlert","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DefaultAlert"}],"abstract":[{"type":"text","text":"A page to interact with other iOS alerts like the App Tracking Transparency prompt."}],"identifier":"doc:\/\/Sisyphos\/documentation\/Sisyphos\/DefaultAlert","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DefaultAlert"}],"url":"\/documentation\/sisyphos\/defaultalert"},"https://developer.apple.com/videos/play/wwdc2020/10220/?time=209":{"title":"WWDC 2020 video","titleInlineContent":[{"type":"text","text":"WWDC 2020 video"}],"type":"link","identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2020\/10220\/?time=209","url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2020\/10220\/?time=209"},"doc://Sisyphos/documentation/Sisyphos/DefaultPermissionAlert":{"role":"symbol","title":"DefaultPermissionAlert","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DefaultPermissionAlert"}],"abstract":[{"type":"text","text":"A page to interact with iOS’ permission dialogue."}],"identifier":"doc:\/\/Sisyphos\/documentation\/Sisyphos\/DefaultPermissionAlert","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DefaultPermissionAlert"}],"url":"\/documentation\/sisyphos\/defaultpermissionalert"},"doc://Sisyphos/documentation/Sisyphos":{"role":"collection","title":"Sisyphos","abstract":[{"type":"text","text":"Declarative end-to-end and UI testing for iOS and macOS"}],"identifier":"doc:\/\/Sisyphos\/documentation\/Sisyphos","kind":"symbol","type":"topic","url":"\/documentation\/sisyphos"},"doc://Sisyphos/documentation/Sisyphos/WritingTests":{"role":"article","title":"Writing Tests with Sisyphos","abstract":[{"type":"text","text":"A short introduction into how to describe user interfaces and how to write tests with Sisyphos."}],"identifier":"doc:\/\/Sisyphos\/documentation\/Sisyphos\/WritingTests","kind":"article","type":"topic","url":"\/documentation\/sisyphos\/writingtests"},"doc://Sisyphos/documentation/Sisyphos/XCTest/XCTestCase":{"role":"symbol","title":"XCTestCase","fragments":[{"kind":"keyword","text":"extension"},{"kind":"text","text":" "},{"kind":"identifier","text":"XCTestCase","preciseIdentifier":"c:objc(cs)XCTestCase"}],"abstract":[],"identifier":"doc:\/\/Sisyphos\/documentation\/Sisyphos\/XCTest\/XCTestCase","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"XCTestCase"}],"url":"\/documentation\/sisyphos\/xctest\/xctestcase"},"doc://Sisyphos/documentation/Sisyphos/Integration":{"role":"article","title":"Integrating Sisyphos in your tests","abstract":[{"type":"text","text":"Learn how to add Sisyphos to your app’s UI tests."}],"identifier":"doc:\/\/Sisyphos\/documentation\/Sisyphos\/Integration","kind":"article","type":"topic","url":"\/documentation\/sisyphos\/integration"},"doc://Sisyphos/documentation/Sisyphos/XCTest/XCTestCase/removeUIInterruptionMonitor(_:)":{"role":"symbol","title":"removeUIInterruptionMonitor(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeUIInterruptionMonitor"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"InterruptionMonitor","preciseIdentifier":"s:8Sisyphos19InterruptionMonitorV"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Removes the given interruption monitor from this test case. When checking for UI interruptions, Sisyphos will no"},{"type":"text","text":" "},{"type":"text","text":"longer consider this interruption monitor."}],"identifier":"doc:\/\/Sisyphos\/documentation\/Sisyphos\/XCTest\/XCTestCase\/removeUIInterruptionMonitor(_:)","kind":"symbol","type":"topic","url":"\/documentation\/sisyphos\/xctest\/xctestcase\/removeuiinterruptionmonitor(_:)"},"doc://Sisyphos/documentation/Sisyphos/XCTest/XCTestCase/addUIInterruptionMonitor(page:handler:)":{"role":"symbol","title":"addUIInterruptionMonitor(page:handler:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addUIInterruptionMonitor"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":">("},{"kind":"externalParam","text":"page"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"P","preciseIdentifier":"s:So10XCTestCaseC8SisyphosE24addUIInterruptionMonitor4page7handlerAC012InterruptionF0Vx_yxctAC4PageRzlF1PL_xmfp"},{"kind":"text","text":", "},{"kind":"externalParam","text":"handler"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"P","preciseIdentifier":"s:So10XCTestCaseC8SisyphosE24addUIInterruptionMonitor4page7handlerAC012InterruptionF0Vx_yxctAC4PageRzlF1PL_xmfp"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"InterruptionMonitor","preciseIdentifier":"s:8Sisyphos19InterruptionMonitorV"}],"abstract":[{"type":"text","text":"Adds a new UI interruption monitor."}],"identifier":"doc:\/\/Sisyphos\/documentation\/Sisyphos\/XCTest\/XCTestCase\/addUIInterruptionMonitor(page:handler:)","kind":"symbol","type":"topic","url":"\/documentation\/sisyphos\/xctest\/xctestcase\/adduiinterruptionmonitor(page:handler:)"},"doc://Sisyphos/documentation/Sisyphos/XCTest/XCTestCase/disableDefaultXCUIInterruptionHandlers()":{"role":"symbol","title":"disableDefaultXCUIInterruptionHandlers()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"disableDefaultXCUIInterruptionHandlers"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"By default, UI testing in an "},{"type":"codeVoice","code":"XCTestCase"},{"type":"text","text":" has implicit UI interruption handlers which will dismiss alerts,"},{"type":"text","text":" "},{"type":"text","text":"permission dialogs, banners and so on. See https:\/\/developer.apple.com\/videos\/play\/wwdc2020\/10220\/?time=209."},{"type":"text","text":" "},{"type":"text","text":"Those implicit handlers will interfere if you are setting up tests for permission flows or tests which require"},{"type":"text","text":" "},{"type":"text","text":"the handling of alerts. Because of this, you can remove this implicit handlers by calling this method."}],"identifier":"doc:\/\/Sisyphos\/documentation\/Sisyphos\/XCTest\/XCTestCase\/disableDefaultXCUIInterruptionHandlers()","kind":"symbol","type":"topic","url":"\/documentation\/sisyphos\/xctest\/xctestcase\/disabledefaultxcuiinterruptionhandlers()"}}}