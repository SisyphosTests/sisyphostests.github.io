{"metadata":{"roleHeading":"Article","modules":[{"name":"Sisyphos"}],"role":"article","title":"Handling Interruptions"},"abstract":[{"text":"Learn how to handle interruptions that can happen unexpectedly or at any time, such as alerts and permission dialogues.","type":"text"}],"kind":"article","hierarchy":{"paths":[["doc:\/\/sisyphos.Sisyphos\/documentation\/Sisyphos"]]},"primaryContentSections":[{"content":[{"text":"Registering interruption handlers","level":2,"type":"heading","anchor":"Registering-interruption-handlers"},{"type":"paragraph","inlineContent":[{"text":"Sisyphos has the philosophy that you always describe what to expect upfront.","type":"text"},{"text":" ","type":"text"},{"text":"You usually don’t react on things happening in your tested app. Instead, you describe what you expect that happens and","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Sisyphos is validating that the app does like expected."}]},{"inlineContent":[{"type":"text","text":"However, there are sometimes UI elements which will interrupt the user interface and you are not in control when or"},{"text":" ","type":"text"},{"type":"text","text":"where these elements will appear."}],"type":"paragraph"},{"inlineContent":[{"text":"For such situations, Sisyphos provides the possibility to register interruption handlers.","type":"text"},{"text":" ","type":"text"},{"text":"You can describe the interruption that appears with a page, similar to what you do in regular tests.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Let’s say we want to react on an alert that has the message "},{"code":"There was an error","type":"codeVoice"},{"type":"text","text":" and a button that says "},{"code":"OK","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"We can describe the alert with the following page:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["struct ErrorAlert: Page {","    let button: Button(label: \"OK\")","    var body: PageDescription {","        Alert {","            StaticText(\"There was an error\")","            button","        }","    }","}"]},{"type":"paragraph","inlineContent":[{"text":"Then, in the test, you register an interruption monitor that presses on the button whenever the alert is currently","type":"text"},{"type":"text","text":" "},{"type":"text","text":"displayed and interrupting the user interface because of this."}]},{"syntax":"swift","code":["addInterruptionMonitor(page: ErrorAlert()) { page in","    page.button.tap()","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"See the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/sisyphos.Sisyphos\/documentation\/Sisyphos\/XCTest\/XCTestCase\/addUIInterruptionMonitor(page:handler:)"},{"text":" method for more details.","type":"text"}],"type":"paragraph"},{"type":"heading","anchor":"Unregistering-interruption-handlers","level":2,"text":"Unregistering interruption handlers"},{"inlineContent":[{"text":"A Sisyphos interruption monitor only handles interruptions in the test case in which it was registered. It will not","type":"text"},{"type":"text","text":" "},{"type":"text","text":"handle interruptions that are called in other test cases."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Yet, sometimes you want to have even more precise control and only handle interruptions that happen in selected parts of"},{"type":"text","text":" "},{"type":"text","text":"a test case."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"To achieve this, you can unregister any interruption monitor that was previously registered via the","type":"text"},{"type":"text","text":" "},{"isActive":true,"type":"reference","identifier":"doc:\/\/sisyphos.Sisyphos\/documentation\/Sisyphos\/XCTest\/XCTestCase\/removeUIInterruptionMonitor(_:)"},{"text":" method.","type":"text"}]},{"text":"Provided Pages for iOS Permission interruptions","level":2,"type":"heading","anchor":"Provided-Pages-for-iOS-Permission-interruptions"},{"inlineContent":[{"text":"Sisyphos comes with page implementations that enable you to write tests for permission flows on iOS.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"You can use this pages to add interruption handlers that can handle permission dialogues."}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/sisyphos.Sisyphos\/documentation\/Sisyphos\/DefaultPermissionAlert"},{"text":" A page that can describe permission dialogues on iOS.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/sisyphos.Sisyphos\/documentation\/Sisyphos\/DefaultAlert","isActive":true,"type":"reference"},{"text":": A page that can describe certain iOS permission alerts such as App Tracking Transparency prompt.","type":"text"}]}]}],"type":"unorderedList"},{"level":2,"type":"heading","text":"Removing Default Interruption Handlers","anchor":"Removing-Default-Interruption-Handlers"},{"inlineContent":[{"type":"text","text":"By default, XCTest will handle interruptions such as permission dialogues automatically."},{"type":"text","text":" "},{"text":"This is done with implicit interruption handlers that take care of the most common interruptions for you.","type":"text"},{"text":" ","type":"text"},{"text":"On iOS, XCTest handles interrupting elements if they have a cancel button or a default button.","type":"text"},{"text":" ","type":"text"},{"text":"Starting from Xcode 12, it also implicitly handles Banner notifications.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The details are explained in a "},{"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2020\/10220\/?time=209","type":"reference","isActive":true},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"If you want to test permission flows, then this implicit handling will interfere with your tests,"},{"text":" ","type":"text"},{"text":"which ultimatively makes it impossible to write such tests.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Therefore, Sisyphos extends the ","type":"text"},{"type":"reference","identifier":"doc:\/\/sisyphos.Sisyphos\/documentation\/Sisyphos\/XCTest\/XCTestCase","isActive":true},{"type":"text","text":" class"},{"type":"text","text":" "},{"text":"and provides the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/sisyphos.Sisyphos\/documentation\/Sisyphos\/XCTest\/XCTestCase\/disableDefaultXCUIInterruptionHandlers()","type":"reference"},{"type":"text","text":" method."},{"text":" ","type":"text"},{"text":"Calling this method will disable the implicit handlers, so you can write tests that test permission flows.","type":"text"}]}],"kind":"content"}],"seeAlsoSections":[{"title":"Essentials","generated":true,"anchor":"Essentials","identifiers":["doc:\/\/sisyphos.Sisyphos\/documentation\/Sisyphos\/Integration","doc:\/\/sisyphos.Sisyphos\/documentation\/Sisyphos\/WritingTests"]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/sisyphos.Sisyphos\/documentation\/Sisyphos\/Interruptions"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/sisyphos\/interruptions"]}],"references":{"doc://sisyphos.Sisyphos/documentation/Sisyphos/DefaultPermissionAlert":{"type":"topic","navigatorTitle":[{"text":"DefaultPermissionAlert","kind":"identifier"}],"identifier":"doc:\/\/sisyphos.Sisyphos\/documentation\/Sisyphos\/DefaultPermissionAlert","kind":"symbol","title":"DefaultPermissionAlert","abstract":[{"text":"A page to interact with iOS’ permission dialogue.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"DefaultPermissionAlert","kind":"identifier"}],"role":"symbol","url":"\/documentation\/sisyphos\/defaultpermissionalert"},"doc://sisyphos.Sisyphos/documentation/Sisyphos/XCTest/XCTestCase/addUIInterruptionMonitor(page:handler:)":{"title":"addUIInterruptionMonitor(page:handler:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addUIInterruptionMonitor","kind":"identifier"},{"kind":"text","text":"<"},{"text":"P","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"page","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"P","preciseIdentifier":"s:So10XCTestCaseC8SisyphosE24addUIInterruptionMonitor4page7handlerAC012InterruptionF0Vx_yxctAC4PageRzlF1PL_xmfp"},{"kind":"text","text":", "},{"kind":"externalParam","text":"handler"},{"kind":"text","text":": ("},{"text":"P","kind":"typeIdentifier","preciseIdentifier":"s:So10XCTestCaseC8SisyphosE24addUIInterruptionMonitor4page7handlerAC012InterruptionF0Vx_yxctAC4PageRzlF1PL_xmfp"},{"kind":"text","text":") -> "},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:8Sisyphos19InterruptionMonitorV","kind":"typeIdentifier","text":"InterruptionMonitor"}],"kind":"symbol","type":"topic","abstract":[{"text":"Adds a new UI interruption monitor.","type":"text"}],"url":"\/documentation\/sisyphos\/xctest\/xctestcase\/adduiinterruptionmonitor(page:handler:)","identifier":"doc:\/\/sisyphos.Sisyphos\/documentation\/Sisyphos\/XCTest\/XCTestCase\/addUIInterruptionMonitor(page:handler:)","role":"symbol"},"doc://sisyphos.Sisyphos/documentation/Sisyphos/XCTest/XCTestCase":{"identifier":"doc:\/\/sisyphos.Sisyphos\/documentation\/Sisyphos\/XCTest\/XCTestCase","url":"\/documentation\/sisyphos\/xctest\/xctestcase","kind":"symbol","role":"symbol","fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"c:objc(cs)XCTestCase","text":"XCTestCase","kind":"identifier"}],"title":"XCTestCase","abstract":[],"navigatorTitle":[{"text":"XCTestCase","kind":"identifier"}],"type":"topic"},"doc://sisyphos.Sisyphos/documentation/Sisyphos/Integration":{"url":"\/documentation\/sisyphos\/integration","abstract":[{"text":"Learn how to add Sisyphos to your app’s UI tests.","type":"text"}],"type":"topic","role":"article","identifier":"doc:\/\/sisyphos.Sisyphos\/documentation\/Sisyphos\/Integration","kind":"article","title":"Integrating Sisyphos in your tests"},"doc://sisyphos.Sisyphos/documentation/Sisyphos/DefaultAlert":{"url":"\/documentation\/sisyphos\/defaultalert","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DefaultAlert"}],"type":"topic","title":"DefaultAlert","identifier":"doc:\/\/sisyphos.Sisyphos\/documentation\/Sisyphos\/DefaultAlert","role":"symbol","abstract":[{"text":"A page to interact with other iOS alerts like the App Tracking Transparency prompt.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"DefaultAlert","kind":"identifier"}]},"https://developer.apple.com/videos/play/wwdc2020/10220/?time=209":{"type":"link","titleInlineContent":[{"type":"text","text":"the explanation at the WWDC 2020 video"}],"identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2020\/10220\/?time=209","title":"the explanation at the WWDC 2020 video","url":"https:\/\/developer.apple.com\/videos\/play\/wwdc2020\/10220\/?time=209"},"doc://sisyphos.Sisyphos/documentation/Sisyphos/XCTest/XCTestCase/removeUIInterruptionMonitor(_:)":{"abstract":[{"type":"text","text":"Removes the given interruption monitor from this test case. When checking for UI interruptions, Sisyphos will no"},{"text":" ","type":"text"},{"text":"longer consider this interruption monitor.","type":"text"}],"role":"symbol","identifier":"doc:\/\/sisyphos.Sisyphos\/documentation\/Sisyphos\/XCTest\/XCTestCase\/removeUIInterruptionMonitor(_:)","title":"removeUIInterruptionMonitor(_:)","kind":"symbol","type":"topic","url":"\/documentation\/sisyphos\/xctest\/xctestcase\/removeuiinterruptionmonitor(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"removeUIInterruptionMonitor","kind":"identifier"},{"kind":"text","text":"("},{"text":"InterruptionMonitor","kind":"typeIdentifier","preciseIdentifier":"s:8Sisyphos19InterruptionMonitorV"},{"text":")","kind":"text"}]},"doc://sisyphos.Sisyphos/documentation/Sisyphos":{"title":"Sisyphos","url":"\/documentation\/sisyphos","kind":"symbol","role":"collection","identifier":"doc:\/\/sisyphos.Sisyphos\/documentation\/Sisyphos","abstract":[{"text":"Declarative end-to-end and UI testing for iOS and macOS","type":"text"}],"type":"topic"},"doc://sisyphos.Sisyphos/documentation/Sisyphos/WritingTests":{"url":"\/documentation\/sisyphos\/writingtests","abstract":[{"type":"text","text":"A short introduction into how to describe user interfaces and how to write tests with Sisyphos."}],"type":"topic","role":"article","identifier":"doc:\/\/sisyphos.Sisyphos\/documentation\/Sisyphos\/WritingTests","kind":"article","title":"Writing Tests with Sisyphos"},"doc://sisyphos.Sisyphos/documentation/Sisyphos/XCTest/XCTestCase/disableDefaultXCUIInterruptionHandlers()":{"url":"\/documentation\/sisyphos\/xctest\/xctestcase\/disabledefaultxcuiinterruptionhandlers()","kind":"symbol","title":"disableDefaultXCUIInterruptionHandlers()","role":"symbol","identifier":"doc:\/\/sisyphos.Sisyphos\/documentation\/Sisyphos\/XCTest\/XCTestCase\/disableDefaultXCUIInterruptionHandlers()","type":"topic","abstract":[{"text":"By default, UI testing in an ","type":"text"},{"code":"XCTestCase","type":"codeVoice"},{"text":" has implicit UI interruption handlers which will dismiss alerts,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"permission dialogs, banners and so on."},{"type":"text","text":" "},{"type":"text","text":"See "},{"isActive":true,"type":"reference","identifier":"https:\/\/developer.apple.com\/videos\/play\/wwdc2020\/10220\/?time=209"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Those implicit handlers will interfere if you are setting up tests for permission flows or tests which require"},{"type":"text","text":" "},{"text":"the handling of alerts. Because of this, you can remove this implicit handlers by calling this method.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"disableDefaultXCUIInterruptionHandlers","kind":"identifier"},{"text":"()","kind":"text"}]}}}