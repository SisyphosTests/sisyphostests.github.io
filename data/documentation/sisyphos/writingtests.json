{"primaryContentSections":[{"kind":"content","content":[{"anchor":"General-principles","level":2,"type":"heading","text":"General principles"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"text","text":" "},{"type":"text","text":"Sisyphos’ documentation is still work in progress. So far, a lot of the basic principles and ideas are not described"},{"type":"text","text":" "},{"type":"text","text":"which makes it very hard to understand the framework and its philosophy."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This will change with future releases of the framework."}]}],"type":"aside","name":"Note"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Describe the page how it’s visible for the user, starting from the upper left and going to the lower right."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The name of the page elements are the capitalized versions of"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/xctest\/xcuielement\/elementtype"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Sisyphos doesn’t implement all element types which are available for "},{"type":"codeVoice","code":"XCUIElements"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Instead, it only implements a subset of elements."}]},{"anchor":"You-can-omit-elements-you-are-not-interested-in","level":3,"type":"heading","text":"You can omit elements you are not interested in"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You don’t need to add every element which is visible on the screen."},{"type":"text","text":" "},{"type":"text","text":"It’s perfectly fine to omit elements."},{"type":"text","text":" "},{"type":"text","text":"You only need to add the elements which are relevant and which should make a test fail if they are not present or"},{"type":"text","text":" "},{"type":"text","text":"if they have the wrong contents."}]},{"anchor":"The-order-and-hierarchy-of-elements-is-important","level":3,"type":"heading","text":"The order and hierarchy of elements is important"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Although you can skip elements, the relative order of elements which are expected in your page is important."},{"type":"text","text":" "},{"type":"text","text":"For example, if you have the following screen:"}]},{"type":"codeListing","syntax":"swift","code":["struct ExamplePage: Page {","    var body: PageDescription {","        StaticText(\"First Name\")","        TextField()","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In this example, it’s important that the text field actually appears after the static text - which means that the text"},{"type":"text","text":" "},{"type":"text","text":"should be above the text field. If the text is below the text field, then the tests will fail because the page will"},{"type":"text","text":" "},{"type":"text","text":"never match with the screen contents."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can utilize this to match elements which would be hard to match otherwise. For example, in the following page the"},{"type":"text","text":" "},{"type":"text","text":"text fields wouldn’t be distinguishable as they neither have an accessibility identifier nor any other attribute."}]},{"type":"codeListing","syntax":"swift","code":["struct ExamplePage: Page {","    let firstNameField = TextField()","    ","    let lastNameField = TextField()","    ","    var body: PageDescription {","        StaticText(\"First Name\")","        firstNameField","        StaticText(\"Last Name\")","        lastNameField","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In a regular XCUITest without Sisyphos, you would need to go via the text fields’ indices which will make the test very"},{"type":"text","text":" "},{"type":"text","text":"fragile if the order of elements change."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"With Sisyphos, you have an easy way to describe the relations between the position of elements."}]},{"anchor":"You-dont-need-to-describe-all-ancestors-of-an-element","level":3,"type":"heading","text":"You don’t need to describe all ancestors of an element"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The hierarchy of elements can be deeply nested. It’s not uncommon for elements to have 5-10 ancestors."},{"type":"text","text":" "},{"type":"text","text":"In Sisyphos, you can omit arbitrary ancestors and the element matching will work nevertheless."},{"type":"text","text":" "},{"type":"text","text":"This makes the tests very maintainable as usually the ancestors of an element change quite a lot, but the element and"},{"type":"text","text":" "},{"type":"text","text":"its contents are stable."}]},{"anchor":"Code-generation","level":2,"type":"heading","text":"Code generation"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Instead of building the descriptions of the screens yourself, Sisyphos can automatically generate the code for you."},{"type":"text","text":" "},{"type":"text","text":"Call "},{"type":"codeVoice","code":"startCodeGeneration()"},{"type":"text","text":" inside of an "},{"type":"codeVoice","code":"XCTestCase"},{"type":"text","text":". Sisyphos will then record any new screen"},{"type":"text","text":" "},{"type":"text","text":"which will appear and add the screens’ source code at the end of the file while you manually browse through the app."}]},{"type":"codeListing","syntax":"swift","code":["import XCTest","import Sisyphos","","class UITests: XCTestCase {","","    func testNew() {","        let app = XCUIApplication()","        app.launch()","        ","        startCodeGeneration()","    }","","}"]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"codegeneration"}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/sisyphos\/writingtests"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Sisyphos\/documentation\/Sisyphos\/WritingTests","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A short introduction into how to describe user interfaces and how to write tests with Sisyphos."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Writing Tests with Sisyphos","role":"article","modules":[{"name":"Sisyphos"}]},"hierarchy":{"paths":[["doc:\/\/Sisyphos\/documentation\/Sisyphos"]]},"seeAlsoSections":[{"title":"Essentials","identifiers":["doc:\/\/Sisyphos\/documentation\/Sisyphos\/Integration"],"generated":true}],"references":{"doc://Sisyphos/documentation/Sisyphos/Integration":{"role":"article","title":"Integrating Sisyphos in your tests","abstract":[{"type":"text","text":"Learn how to add Sisyphos to your app’s UI tests."}],"identifier":"doc:\/\/Sisyphos\/documentation\/Sisyphos\/Integration","kind":"article","type":"topic","url":"\/documentation\/sisyphos\/integration"},"https://developer.apple.com/documentation/xctest/xcuielement/elementtype":{"title":"XCUIElement.ElementType","titleInlineContent":[{"type":"text","text":"XCUIElement.ElementType"}],"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/xctest\/xcuielement\/elementtype","url":"https:\/\/developer.apple.com\/documentation\/xctest\/xcuielement\/elementtype"},"doc://Sisyphos/documentation/Sisyphos":{"role":"collection","title":"Sisyphos","abstract":[{"type":"text","text":"Declarative end-to-end and UI testing for iOS and macOS"}],"identifier":"doc:\/\/Sisyphos\/documentation\/Sisyphos","kind":"symbol","type":"topic","url":"\/documentation\/sisyphos"},"codegeneration":{"alt":null,"type":"image","identifier":"codegeneration","variants":[{"url":"\/images\/codegeneration.gif","traits":["1x","light"]}]}}}